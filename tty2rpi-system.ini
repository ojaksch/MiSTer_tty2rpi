# Version 1.0
#
# Copyright (c) 2022 ojaksch, venice
#
#

# Recurring functions
yesno() {
    seconds=${1}
    [ -z "${seconds}" ] && seconds=5
    echo -en "${chide}"
    while [ ${seconds} -gt 0 ]; do
	echo -en "\e[1D${fred}${seconds}${freset}"
	read -r -s -t1 -N1 KEY
	[ "${KEY}" == "A" ] && KEY="y" && break
	[ "${KEY}" == "B" ] && KEY="n" && break
	: $((seconds--))
    done
    echo -en "${cshow}"
    echo
}

fblink="\e[5m"
fbold="\e[1m"
fdim="\e[2m"
freset="\e[0m\033[0m"
finvers="\e[7m"
fhidden="\e[8m"
funderl="\e[4m"
fblue="\e[1;34m"
fgreen="\e[1;32m"
fcyan="\e[1;36m"
fred="\e[1;31m"
fmagenta="\e[1;35m"
fyellow="\e[1;33m"
fwhite="\e[1;37m"
fgrey="\e[1;30m"
chide="\e[?25l"
cshow="\e[?25h"

REPOSITORY_URL="https://raw.githubusercontent.com/ojaksch/MiSTer_tty2rpi/main"
#REPOSITORY_URL="https://raw.githubusercontent.com/ojaksch/MiSTer_tty2rpi/main/Testing"
PICTURE_REPOSITORY_URL="https://www.tty2tft.de"
export RSYNC_PASSWORD="eSvcFFF5aLpmbNqWKE3SE2FewkWE"

TTY2RPI_PATH="/media/fat/tty2rpi"
NODEBUG="-q -o /dev/null"

INITSCRIPT="${TTY2RPI_PATH}/S60tty2rpi"
INITDISABLED="${TTY2RPI_PATH}/_S60tty2rpi"
UPDATESCRIPT="/media/fat/Scripts/update_tty2rpi.sh"
DAEMONNAME="tty2rpi.sh"
DAEMONSCRIPT="${TTY2RPI_PATH}/tty2rpi.sh"
CCSCRIPT="/media/fat/Scripts/tty2rpi_cc.sh"
USERSTARTUP="/media/fat/linux/user-startup.sh"
USERSTARTUPTPL="/media/fat/linux/_user-startup.sh"
SOUNDPATH="${TTY2RPI_PATH}/sound"

WAITSECS="0.02"
newcore=""
oldcore=""
corenamefile="/tmp/CORENAME"

# Debugging
debug="false"
debugfile="/tmp/tty2rpi"

# Do not change this until you know what you do
MOUNTRO="false"			# Helper flag for update_tty2rpi_script.sh. Please don't touch as it leaves the SD card of MiSTer writeable otherwise.

# TCP socket - set this in tty2rpi-user.ini
TTYDEV="/dev/tcp/IP-ADDRESS-OF-RPI/6666"

# Userdata
TTY2RPI_UPDATE="yes"		# Keep the display software up-to-date
SCRIPT_UPDATE="yes"		# Set to "yes" if you want to update the tty2rpi Scripts by the "Updater"
